<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE log4j:configuration SYSTEM "log4j.dtd">
<log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/">

	<!-- ========================== 自定义输出格式说明================================ -->
	<!-- %p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL -->
	<!-- #%r 输出自应用启动到输出该log信息耗费的毫秒数  -->
	<!-- #%c 输出所属的类目，通常就是所在类的全名 -->
	<!-- #%t 输出产生该日志事件的线程名 -->
	<!-- #%n 输出一个回车换行符，Windows平台为“\r\n”，Unix平台为“\n” -->
	<!-- #%d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyy MMM dd HH:mm:ss,SSS}，输出类似：2002年10月18日 22：10：28，921  -->
	<!-- #%l 输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数。举例：Testlog4.main(TestLog4.java:10)  -->
	<!-- ========================================================================== -->
	
	<!-- ========================== 输出方式说明================================ -->
	<!--	Log4j提供的appender有以下几种:  -->
	<!-- org.apache.log4j.ConsoleAppender(控制台),  -->
	<!-- org.apache.log4j.FileAppender(文件),  -->
	<!-- org.apache.log4j.DailyRollingFileAppender(每天产生一个日志文件), -->
	<!-- org.apache.log4j.RollingFileAppender(文件大小到达指定尺寸的时候产生一个新的文件),  -->
	<!-- org.apache.log4j.WriterAppender(将日志信息以流格式发送到任意指定的地方)   -->
	<!-- ========================================================================== -->
	
	<!-- 按输出终端分类：控制台、文件、数据库、邮件和输出流等 -->
	<!-- 控制台日志 -->
	<appender name="STDOUT" class="org.apache.log4j.ConsoleAppender">
	    <layout class="org.apache.log4j.PatternLayout">
	        <param name="ConversionPattern" value="%d{yyyy-MM-dd HH:mm:ss,SSS} %20c- %m%n"/>
	    </layout>
	    
	    <!-- 设置输出的级别 -->
		<filter class="org.apache.log4j.varia.LevelRangeFilter">
			<param name="LevelMin" value="INFO" />
		</filter>
	</appender>
	
	<!-- 按级别分类：DEBUG、INFO、WARN和ERROR -->
	<!-- DEBUG -->
	<appender name="DEBUG" class="org.apache.log4j.DailyRollingFileAppender">
	    <!-- 指定输出文件的位置 -->
	    <param name="File" value="${catalina.base}/aio_logs/debug/debug"/>
	    <!-- 设置是否在重新启动服务时，在原有日志的基础添加新日志 -->
	    <param name="Append" value="true"/>
	    <param name="DatePattern" value="'.'yyyy-MM-dd'.log'"/>
	    
	    <layout class="org.apache.log4j.PatternLayout">
	        <param name="ConversionPattern" value="%d{yyy-MM-dd HH:mm:ss} - %m%n"/>
	    </layout>
	    
	    <!-- 设置输出的级别 -->
		<filter class="org.apache.log4j.varia.LevelRangeFilter">
			<param name="LevelMin" value="DEBUG" />
			<param name="LevelMax" value="DEBUG" />
		</filter>
	</appender>
	
	<!-- INFO -->
	<appender name="INFO" class="org.apache.log4j.DailyRollingFileAppender">
	    <!-- 指定输出文件的位置 -->
	    <param name="File" value="${catalina.base}/aio_logs/info/info"/>
	    <!-- 设置是否在重新启动服务时，在原有日志的基础添加新日志 -->
	    <param name="Append" value="true"/>
	    <param name="DatePattern" value="'.'yyyy-MM-dd'.log'"/>
	    
	    <layout class="org.apache.log4j.PatternLayout">
	        <param name="ConversionPattern" value="%d{yyy-MM-dd HH:mm:ss} - %m%n"/>
	    </layout>
	    
	    <!-- 设置输出的级别 -->
		<filter class="org.apache.log4j.varia.LevelRangeFilter">
			<param name="LevelMin" value="INFO" />
			<param name="LevelMax" value="INFO" />
		</filter>
	</appender>
	
	<!-- WARN -->
	<appender name="WARN" class="org.apache.log4j.DailyRollingFileAppender">
	    <!-- 指定输出文件的位置 -->
	    <param name="File" value="${catalina.base}/aio_logs/warn/warn"/>
	    <!-- 设置是否在重新启动服务时，在原有日志的基础添加新日志 -->
	    <param name="Append" value="true"/>
	    <param name="DatePattern" value="'.'yyyy-MM-dd'.log'"/>
	    
	    <layout class="org.apache.log4j.PatternLayout">
	        <param name="ConversionPattern" value="%d{yyy-MM-dd HH:mm:ss} - %m%n"/>
	    </layout>
	    
	    <!-- 设置输出的级别 -->
		<filter class="org.apache.log4j.varia.LevelRangeFilter">
			<param name="LevelMin" value="WARN" />
			<param name="LevelMax" value="WARN" />
		</filter>
	</appender>
	
	<!-- ERROR -->
	<appender name="ERROR" class="org.apache.log4j.DailyRollingFileAppender">
	    <!-- 指定输出文件的位置 -->
	    <param name="File" value="${catalina.base}/aio_logs/error/error"/>
	    <!-- 设置是否在重新启动服务时，在原有日志的基础添加新日志 -->
	    <param name="Append" value="true"/>
	    <param name="DatePattern" value="'.'yyyy-MM-dd'.log'"/>
	    
	    <layout class="org.apache.log4j.PatternLayout">
	        <param name="ConversionPattern" value="%d{yyy-MM-dd HH:mm:ss} - %m%n"/>
	    </layout>
	    
	    <!-- 设置输出的级别 -->
		<filter class="org.apache.log4j.varia.LevelRangeFilter">
			<param name="LevelMin" value="ERROR" />
			<param name="LevelMax" value="ERROR" />
		</filter>
	</appender>
	
	
	<!-- 输出到日志文件  -->
	<appender name="FILE" class="org.apache.log4j.RollingFileAppender">
		<!-- 设置File参数：日志输出文件名 -->
		<param name="File" value="log/all.log" />
		<!-- 设置是否在重新启动服务时，在原有日志的基础添加新日志 -->
		<param name="Append" value="true" />
		<!-- 设置文件大小 -->
		<param name="MaxFileSize" value="1MB" />
		<!-- 设置文件备份 -->
		<param name="MaxBackupIndex" value="10000" />
		<!-- 设置输出文件项目和格式 -->
		<layout class="org.apache.log4j.PatternLayout">
			<param name="ConversionPattern" value="%d{yyyy-MM-dd HH:mm:ss} %-5p (%c:%L)- %m%n" />
		</layout>
	</appender>

	<!-- 输出到日志文件 每天一个日志  -->
	<appender name="DAILY" class="org.apache.log4j.DailyRollingFileAppender">   
	    <param name="File" value="log/daily" />   
        <param name="DatePattern" value="'.'yyyy-MM-dd'.log'" />   
        <layout class="org.apache.log4j.PatternLayout">   
        	<param name="ConversionPattern" value="[%d{yyyy-MM-dd HH:mm:ss\} %-5p] [%t] (%c:%L) - %m%n" />   
        </layout>   
  	</appender> 
  	
  	<!-- 输出到数据库中 -->
	<appender name="JDBC" class="org.apache.log4j.jdbc.JDBCAppender">
		<param name="URL" value="jdbc:mysql://localhost:3306/db_aio_web" />
		<param name="driver" value="com.mysql.jdbc.Driver" />
		<param name="user" value="root" />
		<param name="password" value="123456" />
		<layout class="org.apache.log4j.PatternLayout">
		    <!-- create table if not exists log_log4j(stamp varchar(20),thread varchar(100),level varchar(20),class varchar(50),message varchar(2000)); -->
			<param name="ConversionPattern" value="INSERT INTO LOG_LOG4J(stamp,thread,level,class,message) VALUES ('%d', '%t', '%p', '%c', '%m')" />
		</layout>
		
		
		<!-- 设置输出的级别 -->
		<filter class="org.apache.log4j.varia.LevelRangeFilter">
			<param name="LevelMin" value="ERROR" />
		</filter>
	</appender> 
	
	<!-- 发送邮件 -->
	<appender name="STMP" class="org.apache.log4j.net.SMTPAppender">
		<param name="BufferSize" value="128" />
		<param name="SMTPHost" value="smtp.126.com" />
		<param name="SMTPUsername" value="hopestar720@126.com" />
		<param name="SMTPPassword" value="netease720." />
		<param name="From" value="hopestar720@126.com" />
		<param name="To" value="lijiangwei@tuoming.com" />
		<param name="Subject" value="项目日志" />
		<param name="LocationInfo" value="true" />
		<param name="SMTPDebug" value="true" />
		
		<layout class="org.apache.log4j.PatternLayout">   
        	<param name="ConversionPattern" value="[%d{yyyy-MM-dd HH:mm:ss\} %-5p] [%t] (%c:%L) - %m%n" />   
        </layout> 
        
		<!-- 设置输出的级别 -->
		<filter class="org.apache.log4j.varia.LevelRangeFilter">
			<param name="LevelMin" value="ERROR" />
		</filter>
	</appender>

	<!--- 异步测试，当日志达到缓存区大小时候执行所包的appender -->
	<appender name="ASYNC" class="org.apache.log4j.AsyncAppender">   
	     <param name="BufferSize" value="10"/>   
	     <appender-ref ref="STMP"/>
   	</appender>
   	
	<!-- category 部分定义了特定包或者类的输出级别和日志具体输出哪个包的信息，以及输出位置，可以有多个 -->
	<!-- 这个配置的目的：只输出org.apache包下的调试信息 
	<category name="org.apache">
		<priority value="WARN" />
		<appender-ref ref="WARN" />
	</category>
 	-->
 	
 	<category name="com.xhsoft.framework">
		<priority value="ERROR" />
		<appender-ref ref="ERROR" />
	</category>
	
 	<root>
 	    <appender-ref ref="STDOUT"/>
 	    
 	    <!-- <appender-ref ref="DEBUG"/>
 	    <appender-ref ref="INFO"/>
 	    <appender-ref ref="WARN"/>
 	    <appender-ref ref="ERROR"/> -->
 	    
 	    <!-- <appender-ref ref="STMP"/> -->
 	    <!-- <appender-ref ref="JDBC"/>
 	    <appender-ref ref="DAILY"/> -->
 	</root>

</log4j:configuration>